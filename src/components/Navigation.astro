---
---

<nav role="navigation" aria-label="Main navigation">
  <div class="nav-container">
    <a href="#home" class="logo" aria-label="Home - ransys.dev">ransys.dev</a>
    <ul class="nav-links" role="menubar">
      <li><a href="#home">home</a></li>
      <li><a href="#about">about.md</a></li>
      <li><a href="#services">services.json</a></li>
      <li><a href="#projects">projects.list()</a></li>
      <li><a href="#skills">skills.exe</a></li>
      <li><a href="#contact">contact --help</a></li>
    </ul>
    <button class="hamburger" id="hamburger" aria-label="Toggle menu" aria-expanded="false" aria-controls="mobile-menu">
      <span class="line" aria-hidden="true"></span>
      <span class="line" aria-hidden="true"></span>
      <span class="line" aria-hidden="true"></span>
    </button>
  </div>
  <nav class="mobile-menu" id="mobile-menu" aria-label="Mobile navigation" role="navigation">
    <ul class="mobile-nav-links">
      <li><a href="#home">home</a></li>
      <li><a href="#about">about.md</a></li>
      <li><a href="#services">services.json</a></li>
      <li><a href="#projects">projects.list()</a></li>
      <li><a href="#skills">skills.exe</a></li>
      <li><a href="#contact">contact --help</a></li>
    </ul>
  </div>
</nav>

<style>
  nav {
    position: fixed;
    top: 0;
    width: 100%;
    background: rgba(10, 14, 26, 0.95);
    backdrop-filter: blur(10px);
    z-index: 1000;
    padding: 1rem 0;
    border-bottom: 1px solid var(--primary-color);
    transition: border-color 0.5s ease, background 0.5s ease;
  }
  
  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2rem;
  }
  
  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-color);
    text-shadow: var(--glow);
    text-decoration: none;
    cursor: pointer;
    transition: color 0.5s ease;
    position: relative;
  }
  
  .logo::before {
    content: '> ';
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .logo:hover::before {
    opacity: 1;
  }
  
  .nav-links {
    display: flex;
    list-style: none;
    gap: 2rem;
  }
  
  .nav-links a {
    color: var(--light-text);
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .nav-links a:hover {
    color: var(--primary-color);
    text-shadow: var(--glow);
  }
  
  .nav-links a::before {
    content: '> ';
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .nav-links a:hover::before {
    opacity: 1;
  }
  
  .hamburger {
    display: none;
    flex-direction: column;
    gap: 5px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    z-index: 1001;
    -webkit-tap-highlight-color: transparent;
    outline: none;
  }
  
  .hamburger:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }
  
  .hamburger .line {
    width: 25px;
    height: 2px;
    background: var(--primary-color);
    transition: all 0.3s ease;
    box-shadow: var(--glow);
  }
  
  .hamburger.active .line:nth-child(1) {
    transform: rotate(45deg) translate(7px, 7px);
  }
  
  .hamburger.active .line:nth-child(2) {
    opacity: 0;
  }
  
  .hamburger.active .line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -7px);
  }
  
  .mobile-menu {
    display: none;
    position: fixed;
    top: 0;
    right: -100%;
    width: 70%;
    max-width: 300px;
    height: 100vh;
    background: var(--darker-bg);
    border-left: 2px solid var(--primary-color);
    box-shadow: -5px 0 30px rgba(0, 0, 0, 0.5);
    transition: right 0.3s ease;
    z-index: 1000;
    padding-top: 5rem;
  }
  
  .mobile-menu.active {
    right: 0;
  }
  
  .mobile-nav-links {
    list-style: none;
    padding: 2rem;
  }
  
  .mobile-nav-links li {
    margin-bottom: 2rem;
  }
  
  .mobile-nav-links a {
    color: var(--light-text);
    text-decoration: none;
    font-size: 1rem;
    display: block;
    padding: 0.5rem;
    border-left: 3px solid transparent;
    transition: all 0.3s ease;
    position: relative;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .mobile-nav-links a::before {
    content: '> ';
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .mobile-nav-links a:hover::before,
  .mobile-nav-links a:active::before {
    opacity: 1;
  }
  
  .mobile-nav-links a:hover,
  .mobile-nav-links a:active {
    color: var(--primary-color);
    border-left-color: var(--primary-color);
    padding-left: 1rem;
    background: rgba(0, 212, 255, 0.05);
  }
  
  @media (max-width: 1024px) and (min-width: 641px) {
    .nav-container {
      padding: 0 1rem;
    }
    
    .logo {
      font-size: 1.1rem;
      line-height: 1;
    }
    
    .nav-links {
      gap: 0.7rem;
      align-items: center;
    }
    
    .nav-links li {
      display: flex;
      align-items: center;
    }
    
    .nav-links a {
      font-size: 0.75rem;
      white-space: nowrap;
      line-height: 1;
    }
  }
  
  @media (max-width: 640px) {
    .nav-links {
      display: none;
    }
    
    .hamburger {
      display: flex;
    }
    
    .mobile-menu {
      display: block;
    }
  }
  
  @media (max-width: 400px) {
    .mobile-menu {
      width: 80%;
      max-width: 280px;
    }
    
    .mobile-nav-links {
      padding: 1.5rem;
    }
    
    .mobile-nav-links a {
      font-size: 0.9rem;
    }
  }
</style>

<script>
  function initMobileMenu() {
    const hamburger = document.getElementById('hamburger') as HTMLButtonElement;
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileLinks = document.querySelectorAll('.mobile-nav-links a');
    
    if (!hamburger || !mobileMenu) return;
    
    let isExpanded = false;
    
    hamburger.addEventListener('click', () => {
      isExpanded = !isExpanded;
      hamburger.classList.toggle('active');
      mobileMenu.classList.toggle('active');
      hamburger.setAttribute('aria-expanded', String(isExpanded));
      
      // Focus management for mobile menu
      if (isExpanded) {
        const firstLink = mobileLinks[0] as HTMLElement;
        if (firstLink) {
          firstLink.focus();
        }
      }
    });
    
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        isExpanded = false;
        hamburger.classList.remove('active');
        mobileMenu.classList.remove('active');
        hamburger.setAttribute('aria-expanded', 'false');
      });
    });
    
    // Close menu on outside click
    document.addEventListener('click', (e) => {
      const target = e.target;
      if (!(target instanceof Node)) return;
      if (!hamburger.contains(target) && !mobileMenu.contains(target)) {
        isExpanded = false;
        hamburger.classList.remove('active');
        mobileMenu.classList.remove('active');
        hamburger.setAttribute('aria-expanded', 'false');
      }
    });
    
    // Close menu on Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isExpanded) {
        isExpanded = false;
        hamburger.classList.remove('active');
        mobileMenu.classList.remove('active');
        hamburger.setAttribute('aria-expanded', 'false');
        hamburger.focus();
      }
    });
  }
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    initMobileMenu();
  }
</script>

