---
const projects = [
  {
    title: "worcester-laundry.service",
    shortTitle: "laundry.service",
    description: "Responsive landing page for a professional laundry service featuring service showcases, dynamic pricing tables, and interactive contact forms. Built with modern CSS animations and accessibility features.",
    technologies: ["HTML5", "CSS3", "JavaScript", "Responsive Design"],
    liveUrl: "https://aransys.github.io/Project-1/#hero",
    sourceUrl: "https://github.com/aransys/Project-1",
    screenshot: "/screenshots/worcester-laundry.webp",
    terminalCommand: "cat worcester-laundry.service.png"
  },
  {
    title: "music-explorer.app",
    shortTitle: "music-explorer.app",
    description: "Interactive music discovery application with real-time search and preview capabilities. Integrates with external APIs to provide seamless music browsing and playback functionality.",
    technologies: ["JavaScript", "HTML5", "CSS3", "REST API"],
    liveUrl: "https://aransys.github.io/Project-2/",
    sourceUrl: "https://github.com/aransys/Project-2",
    screenshot: "/screenshots/music-explorer.webp",
    terminalCommand: "cat music-explorer.app.png"
  },
  {
    title: "quickgigs.platform",
    shortTitle: "quickgigs.platform",
    description: "Full-stack freelance marketplace with user authentication, profile management, and integrated Stripe payment processing. Features complete CRUD operations, premium memberships, and gig posting system.",
    technologies: ["Django", "Python", "Stripe API", "PostgreSQL"],
    liveUrl: "https://quickgigs-django.onrender.com/",
    sourceUrl: "https://github.com/aransys/quickgigs-django",
    screenshot: "/screenshots/quickgigs.webp",
    terminalCommand: "cat quickgigs.platform.png"
  }
];
---

<section id="projects">
  <h2 class="section-title fade-in">Projects</h2>
  <div class="projects-grid">
    {projects.map((project) => (
      <div class="project-card fade-in">
        <div class="project-header">
          <div class="window-controls">
            <div class="control close"></div>
            <div class="control minimize"></div>
            <div class="control maximize"></div>
          </div>
          <div class="project-title">
            <span class="title-full">{project.title}</span>
            <span class="title-short">{project.shortTitle}</span>
          </div>
        </div>
        <div class="project-content">
          <!-- Terminal Screenshot Preview -->
          <div class="terminal-screenshot">
            <div class="terminal-header">
              <div class="terminal-prompt">user@matrix:~$ {project.terminalCommand}</div>
              <div class="terminal-status">[LOADING...]</div>
            </div>
            <div class="screenshot-container">
              <img 
                src={project.screenshot} 
                alt={`${project.title} screenshot`}
                class="project-screenshot"
                loading="lazy"
                decoding="async"
              />
              <div class="screenshot-overlay" aria-hidden="true">
                <div class="scanlines" aria-hidden="true"></div>
                <div class="glitch-effect" aria-hidden="true"></div>
                <div class="matrix-code" aria-hidden="true">
                  <span>01001000 01100101 01101100 01101100 01101111</span>
                  <span>01010111 01101111 01110010 01101100 01100100</span>
                  <span>01001101 01100001 01110100 01110010 01101001 01111000</span>
                </div>
              </div>
            </div>
          </div>
          
          <p class="project-description">{project.description}</p>
          <div class="tech-stack">
            {project.technologies.map((tech) => (
              <span class="tech-tag">{tech}</span>
            ))}
          </div>
            <div class="project-links">
            <a href={project.liveUrl} class="project-link" target="_blank" rel="noopener noreferrer" aria-label={`View live demo of ${project.title}`}>
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="link-icon">
                <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/>
                <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/>
              </svg>
              Live Demo
            </a>
            <a href={project.sourceUrl} class="project-link" target="_blank" rel="noopener noreferrer" aria-label={`View source code of ${project.title}`}>
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="link-icon">
                <rect x="3" y="3" width="7" height="7"/>
                <rect x="14" y="3" width="7" height="7"/>
                <rect x="14" y="14" width="7" height="7"/>
                <rect x="3" y="14" width="7" height="7"/>
              </svg>
              Source Code
            </a>
          </div>
        </div>
      </div>
    ))}
  </div>
</section>

<style>
  section {
    padding: 5rem 0;
    max-width: 1200px;
    margin: 0 auto;
    padding-left: 2rem;
    padding-right: 2rem;
  }
  
  .section-title {
    font-size: 2.5rem;
    margin-bottom: 3rem;
    text-align: center;
    position: relative;
  }
  
  .section-title::before {
    content: '// ';
    color: var(--primary-color);
    transition: color 0.5s ease;
  }
  
  .section-title::after {
    content: '';
    display: block;
    width: 100px;
    height: 2px;
    background: var(--primary-color);
    margin: 1rem auto;
    box-shadow: var(--glow);
    transition: background 0.5s ease, box-shadow 0.5s ease;
  }
  
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
  }
  
  .project-card {
    background: var(--gray-bg);
    border: 1px solid var(--primary-color);
    transition: all 0.4s ease;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  /* Matrix Scan Effect */
  .project-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    transition: background 0.5s ease;
  }

  /* Additional Matrix scan overlay */
  .project-card::after {
    content: '';
    position: absolute;
    top: -50%;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(
      to bottom,
      transparent,
      rgba(0, 255, 156, 0.15),
      transparent
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    animation: matrixScan 4s ease-in-out infinite;
    pointer-events: none;
    z-index: 2;
  }

  @keyframes matrixScan {
    0%, 90%, 100% { opacity: 0; top: -50%; }
    5% { opacity: 1; }
    10% { top: 150%; }
  }
  
  .project-card:hover {
    transform: translateY(-6px);
    box-shadow: 
      0 20px 50px rgba(0, 255, 156, 0.3),
      inset 0 0 60px rgba(0, 255, 156, 0.1);
    border-color: var(--secondary-color);
  }
  
  .project-header {
    background: var(--darker-bg);
    padding: 1rem;
    border-bottom: 1px solid var(--primary-color);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: background 0.5s ease, border-color 0.5s ease;
    position: relative;
    z-index: 3;
  }
  
  .window-controls {
    display: flex;
    gap: 0.5rem;
  }
  
  .control {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }
  
  .control.close { background: #ff5f56; }
  .control.minimize { background: #ffbd2e; }
  .control.maximize { background: #27ca3f; }
  
  .project-title {
    font-size: 1rem;
    color: var(--primary-color);
    margin-left: 1rem;
    transition: color 0.5s ease;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .title-full {
    display: block;
  }

  .title-short {
    display: none;
  }

  @media (max-width: 640px) {
    .title-full {
      display: none;
    }

    .title-short {
      display: block;
    }
  }
  
  .project-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
    position: relative;
    z-index: 1;
  }

  /* Terminal Screenshot Styles */
  .terminal-screenshot {
    margin-bottom: 1.5rem;
    border: 1px solid var(--primary-color);
    background: var(--darker-bg);
    border-radius: 4px;
    overflow: hidden;
    position: relative;
    transition: all 0.3s ease;
  }

  .terminal-screenshot:hover {
    box-shadow: var(--glow);
    border-color: var(--secondary-color);
  }

  .terminal-header {
    background: var(--darker-bg);
    padding: 0.75rem 1rem;
    border-bottom: 1px solid var(--primary-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.875rem;
    min-height: 2.5rem;
    white-space: nowrap;
    overflow: hidden;
  }

  .terminal-prompt {
    color: var(--primary-color);
    font-family: 'JetBrains Mono', monospace;
    transition: color 0.3s ease;
    flex: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: 1rem;
  }

  .terminal-status {
    color: var(--secondary-color);
    font-size: 0.75rem;
    animation: pulse 2s infinite;
    flex-shrink: 0;
    white-space: nowrap;
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }

  .screenshot-container {
    position: relative;
    overflow: hidden;
    background: var(--dark-bg);
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .project-screenshot {
    width: 100%;
    height: auto;
    max-height: 300px;
    object-fit: cover;
    transition: all 0.3s ease;
    filter: brightness(0.8) contrast(1.1);
  }

  .terminal-screenshot:hover .project-screenshot {
    filter: brightness(1) contrast(1.2);
    transform: scale(1.02);
  }

  .screenshot-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .terminal-screenshot:hover .screenshot-overlay {
    opacity: 1;
  }

  /* Matrix Scanlines Effect */
  .scanlines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(0, 212, 255, 0.03) 2px,
      rgba(0, 212, 255, 0.03) 4px
    );
    animation: scanlines-move 0.1s linear infinite;
  }

  @keyframes scanlines-move {
    0% { transform: translateY(0); }
    100% { transform: translateY(4px); }
  }

  /* Glitch Effect */
  .glitch-effect {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(0, 212, 255, 0.1) 50%,
      transparent 70%
    );
    animation: glitch 0.3s infinite;
  }

  @keyframes glitch {
    0%, 100% { 
      transform: translateX(0);
      opacity: 0;
    }
    10%, 90% { 
      transform: translateX(-2px);
      opacity: 0.1;
    }
    20%, 80% { 
      transform: translateX(2px);
      opacity: 0.1;
    }
  }

  /* Matrix Code Rain */
  .matrix-code {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding: 1rem;
    font-size: 0.75rem;
    color: var(--primary-color);
    opacity: 0.3;
    font-family: 'JetBrains Mono', monospace;
  }

  .matrix-code span {
    animation: matrix-fall 3s linear infinite;
    animation-delay: calc(var(--i) * 0.5s);
  }

  .matrix-code span:nth-child(1) { --i: 0; }
  .matrix-code span:nth-child(2) { --i: 1; }
  .matrix-code span:nth-child(3) { --i: 2; }

  @keyframes matrix-fall {
    0% { 
      transform: translateY(-100%);
      opacity: 0;
    }
    10%, 90% { 
      opacity: 0.3;
    }
    100% { 
      transform: translateY(100%);
      opacity: 0;
    }
  }
  
  .project-description {
    margin: 0 0 1rem 0;
    padding: 0;
    opacity: 0.9;
    flex: 1;
  }
  
  .project-description * {
    margin: 0;
    padding: 0;
  }
  
  .tech-stack {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .tech-tag {
    padding: 0.25rem 0.75rem;
    background: rgba(0, 212, 255, 0.1);
    border: 1px solid var(--primary-color);
    font-size: 0.875rem;
    color: var(--primary-color);
    transition: all 0.5s ease;
  }
  
  .project-links {
    display: flex;
    gap: 1rem;
  }
  
  .project-link {
    color: var(--primary-color);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
  }

  .project-link .link-icon {
    width: 1rem;
    height: 1rem;
    transition: all 0.3s ease;
  }
  
  .project-link:hover {
    text-shadow: var(--glow);
  }

  .project-link:hover .link-icon {
    filter: drop-shadow(0 0 8px var(--primary-color));
    transform: scale(1.1);
  }
  
  @media (max-width: 1024px) and (min-width: 641px) {
    section {
      max-width: 1040px;
      padding-left: 2rem;
      padding-right: 2rem;
      margin-right: 2rem;
    }
    
    .projects-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .project-card {
      min-height: 400px;
      height: auto;
    }
    
    .project-card:last-child:nth-child(3) {
      grid-column: 1 / -1;
      width: calc((100% - 2rem) / 2);
      margin: 0 auto;
    }
  }
  
  @media (max-width: 640px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

